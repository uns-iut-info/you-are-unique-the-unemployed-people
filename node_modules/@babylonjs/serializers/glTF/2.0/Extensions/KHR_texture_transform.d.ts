import type { ITextureInfo } from "babylonjs-gltf2interface";
import type { Texture } from "@babylonjs/core/Materials/Textures/texture.js";
import type { IGLTFExporterExtensionV2 } from "../glTFExporterExtension";
import "../shaders/textureTransform.fragment";
/**
 * @hidden
 */
export declare class KHR_texture_transform implements IGLTFExporterExtensionV2 {
    private _recordedTextures;
    /** Name of this extension */
    readonly name = "KHR_texture_transform";
    /** Defines whether this extension is enabled */
    enabled: boolean;
    /** Defines whether this extension is required */
    required: boolean;
    /** Reference to the glTF exporter */
    private _wasUsed;
    constructor();
    dispose(): void;
    /** @hidden */
    get wasUsed(): boolean;
    postExportTexture?(context: string, textureInfo: ITextureInfo, babylonTexture: Texture): void;
    preExportTextureAsync(context: string, babylonTexture: Texture): Promise<Texture>;
    /**
     * Transform the babylon texture by the offset, rotation and scale parameters using a procedural texture
     * @param babylonTexture
     * @param scene
     */
    private _textureTransformTextureAsync;
}
